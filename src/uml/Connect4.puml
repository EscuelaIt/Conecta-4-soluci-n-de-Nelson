@startuml
class GameView{
-game
-turnView
-boardView
askPlayers()
-startNewGame(numOfPlayers)
-play(column)
visitUserPlayer(userPlayer)
visitMachinePlayer(machinePlayer)
-drawPlayAgainDialog()
}
class TurnView{
-turn
constructor(turn)
drawTurnMessage()
dropToken(column)
visitUserPlayer(userPlayer)
visitMachinePlayer(machinePlayer)
}
class BoardView{
-board
constructor(board)
-createTableHead()
-createTableRows()
setControlsCallback(callback)
renderToken()
resultActions()
}

Abstract    class Player
class RandomMachinePlayer
class UserPlayer

GameView *---> Game
GameView -> TurnView
GameView -> BoardView
BoardView *--> Board
TurnView *--> Turn
Turn *---> "2" Player
Game *--> Turn
Game *--> Board
Player <|-- RandomMachinePlayer
Player <|-- UserPlayer

@enduml